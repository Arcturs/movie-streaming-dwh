version: "3"
services:
  mongodb:
    image: mongo:8.0.5-rc2
    container_name: mongodb
    hostname: mongodb
    volumes:
      - ./initdb/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
      - mongodb-data:/data/db/
      - mongodb-log:/var/log/mongodb/
    ports:
      - "27017:27017"

  # Note: login - admin, password - pass
  mongo-express:
    image: mongo-express:1.0-20-alpine3.19
    container_name: mongo-express
    restart: always
    environment:
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_MONGODB_SERVER: 'mongodb'
    ports:
      - "8081:8081"
    depends_on:
      - mongodb

  # После запуска выполнить команду: cypher-shell -u neo4j -p password -f /import/init_data.cypher для добавления начальных данных
  neo4j:
    image: neo4j:5.13
    container_name: neo4j
    environment:
      - NEO4J_AUTH=neo4j/password
      - NEO4J_PLUGINS=["apoc"]
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - ./initdb/neo4j:/import
      - neo4j_data:/data

  # Note: подключиться через cqlsh -u cassandra -p cassandra и выполнить действия из скрипта
  cassandra:
    image: bitnami/cassandra:5.0.3
    container_name: cassandra
    ports:
      - "7001:7000"
      - "9042:9042"
    environment:
      - CASSANDRA_CLUSTER_NAME=test
    volumes:
      - ./initdb/cassandra:/docker-entrypoint-initdb.d
      - cassandra-data:/var/lib/cassandra

volumes:
  mongodb-data:
  mongodb-log:
  neo4j_data:
  cassandra-data: